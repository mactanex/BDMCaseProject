class System

types


instance variables
    jobCatalogue: set of Job := {};
    employeeCatalogue: set of Employee := {}

operations

public AddJob: Job ==> ()
AddJob(pJob) ==
(
    jobCatalogue := jobCatalogue union {pJob};
)
pre pJob.GetId() not in set {job.GetId() | job in set jobCatalogue};

public AddEmployee: Employee ==> ()
AddEmployee(pEmployeee) ==
(
    employeeCatalogue := employeeCatalogue union {pEmployeee};
)
pre pEmployeee.GetId() not in set {employee.GetId() | employee in set employeeCatalogue};

public GetJobCatalogue: () ==> set of Job
GetJobCatalogue() ==
return jobCatalogue;    

public GetEmployeeCatalogue: () ==> set of Employee
GetEmployeeCatalogue() ==
return employeeCatalogue;    




functions
JobExists: nat * set of Job -> bool
JobExists(id,jobCatalogue) ==
exists j in set jobCatalogue & j.GetId() = id;

EmployeeExists: nat * set of Employee -> bool
EmployeeExists(id,employeeCatalogue) ==
exists e in set employeeCatalogue & e.GetId() = id;


end System