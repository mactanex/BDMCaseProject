--@StepDefinition("job")
class JobChangeStepDefinitions
types
instance variables
    currentJob: JobChange;
    system: System := new System();
operations
-- @Given("job","A job with a unique {int} and a required {string}, {int}, {int} and a {int} exist.")
public Given_a_job_exists: nat * seq of char * nat * nat * nat ==> ()
Given_a_job_exists(id,skill,skilLevel,timeUnit, deadline) ==
(
  currentJob:= new JobChange(id,skill,skilLevel,timeUnit, deadline);
);

-- @When("job","I add the job in the system.")
public When_I_add_the_job_in_the_system: () ==> ()
When_I_add_the_job_in_the_system() ==
(
    system.AddJob(currentJob);
);

-- @Then("job","The job exists in the system.")
public Then_the_job_exists_in_the_system: () ==> bool
Then_the_job_exists_in_the_system() == 
(
  if exists j in set system.GetJobCatalogue() & (j.GetId() = currentJob.GetId()) then return true
  else return false;
) post RESULT = true;
  
end JobChangeStepDefinitions