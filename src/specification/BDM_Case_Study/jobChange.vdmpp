class JobChange

types


instance variables
    id: nat;
    timeUnits: nat;
    skillLevel: nat;
    skill: seq of char;
    deadline: nat;


operations
public JobChange: nat * seq of char *nat*nat*nat ==> JobChange
JobChange(pId,pSkill,pLevel,pTimeUnits,pDeadline) ==
(
    id := pId;
    skill:=pSkill;
    skillLevel:=pLevel;
    timeUnits:=pTimeUnits;
    deadline:=pDeadline;
);

public step: nat ==> ()
step(ptimeunit) == 
(
    if timeUnits - ptimeunit >= 0  
    then 
        timeUnits := timeUnits - ptimeunit
    else
        timeUnits := 0;
); 

public deadlineReached: (nat) ==> bool
deadlineReached(pcurrentday) == 
(
    if pcurrentday > deadline 
    then 
        return true 
    else
        return false
);

public SetTimeUnits: nat ==> ()
SetTimeUnits(newTime) == 
timeUnits := newTime;

pure public GetTimeUnit: () ==> nat
GetTimeUnit() ==
return timeUnits;    

pure public GetSkillLevel: () ==> nat
GetSkillLevel() ==
return skillLevel;    

pure public GetSkill: () ==> seq of char
GetSkill() ==
return skill;    
pure public GetId: () ==> nat
GetId() ==
return id;
pure public GetDeadline: () ==> nat
GetDeadline() ==
return deadline;    


functions
    


end JobChange